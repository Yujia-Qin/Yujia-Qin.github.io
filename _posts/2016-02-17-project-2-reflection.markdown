---
layout: post
title:  "Project 2 Reflection"
date:   2016-02-17 14:38:00 -0600
categories: jekyll update
---
Our work is located <a href="http://unethicalcoding101.tumblr.com/post/139471655637/job-interview-process">here</a>.
I think the most important part our group constructed is the part about what resources students can use to prepare for job interviews. This part helps students to prepare by themselves early, which is super important in the job interview process. I wished I knew earlier about the importance of doing practice problems online. I spent most of the time reviewing algorithms and data structures, but I didn't do enough practice problems. It was after the interviews that I realized how important it is to do practice questions. Companies expect quick and accurate soluction, which could be really challenging if you try to solve a brand new problem. If you've seen similar questions before, then it would be much much easier to come up with a solution. Moreover, it also helps to write actual code in an IDE, although a lot of people emphasize the importance of white board coding. This is because you could catch errors and test the code, and it also makes you a faster programmer. More and more companies are using online IDE in their technical interviews, so writing real code will become more and more important.

I've had a lot of help along the interview process, and the best advice I've ever received is that to keep calm and speak up about your thought process. It is really easy to lose your thoughts if you become nervous and anxious during interviews. Moreover, it is important to communicate well with the interviewers. They care about your thought process. Sometimes you could get good feedback with reasonable approach to a question even if you could not solve it.

Recently students start to spend more and more time preparing for job interviews. I think this is great for students to realize what they need to do to work in the real world, but I don't think college should adjust the curriculum solely for interviews. College is a place to learn new things and get more insights into oneself. What makes a computer science program in college different from a coding school is that college teaches students the bigger picture behind computer science. While a lot of theories and low level knowledge might not be helpful in practical jobs, they are essential to understand what's going on under the hood. Being able to look at the big picture is much more important(at least in my opinion) than the ability to Goolge around and assemble together code pieces. However, I'm not saying that college should stick to the old curriculum. There are always benefitial changes that could improve the overall quality of teaching. And the field of Computer Science is developing so fast that new materials could always be added in. I think our college should always be open to change for more advanced curriculum, but it should keep the theories and fundamentals in the curriculum so that students can have a good grasp of the thoughts behind practical coding. I think the ability to understand the hidden reasoning and design is very important for a good computer scientist.